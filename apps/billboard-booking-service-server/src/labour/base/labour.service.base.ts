/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Labour as PrismaLabour } from "@prisma/client";

export class LabourServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LabourCountArgs, "select">): Promise<number> {
    return this.prisma.labour.count(args);
  }

  async labourItems(args: Prisma.LabourFindManyArgs): Promise<PrismaLabour[]> {
    return this.prisma.labour.findMany(args);
  }
  async labour(
    args: Prisma.LabourFindUniqueArgs
  ): Promise<PrismaLabour | null> {
    return this.prisma.labour.findUnique(args);
  }
  async createLabour(args: Prisma.LabourCreateArgs): Promise<PrismaLabour> {
    return this.prisma.labour.create(args);
  }
  async updateLabour(args: Prisma.LabourUpdateArgs): Promise<PrismaLabour> {
    return this.prisma.labour.update(args);
  }
  async deleteLabour(args: Prisma.LabourDeleteArgs): Promise<PrismaLabour> {
    return this.prisma.labour.delete(args);
  }
}
